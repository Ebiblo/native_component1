{"version":3,"sources":["BottomSheet.tsx"],"names":["interpolate","interpolateV1","interpolateNode","interpolateV2","require","Animated","addWhitelistedUIProps","decelerationRate","BottomSheetComponent","animationDuration","DEFAULT_ANIMATION_DURATION","animationEasing","DEFAULT_ANIMATION_EASING","initialSnapIndex","snapPoints","_snapPoints","topInset","enabled","animatedPosition","_animatedPosition","animatedPositionIndex","_animatedPositionIndex","onChange","_onChange","handleComponent","HandleComponent","Handle","backgroundComponent","BackgroundComponent","children","ref","length","currentPositionIndexRef","rootTapGestureRef","handlePanGestureRef","scrollableContentOffsetY","setScrollableRef","removeScrollableRef","scrollToTop","flashScrollableIndicators","sheetHeight","normalizedSnapPoints","maxSnapPoint","map","normalizedSnapPoint","initialPosition","state","handlePanGestureState","translation","y","handlePanGestureTranslationY","velocity","handlePanGestureVelocityY","gestureHandler","handlePanGestureHandler","contentPanGestureState","contentPanGestureTranslationY","contentPanGestureVelocityY","tapGestureState","tapGestureHandler","position","manualSnapToPoint","currentPosition","currentGesture","inputRange","slice","reverse","outputRange","_","index","extrapolate","Extrapolate","CLAMP","NORMAL_DECELERATION_RATE","containerStyle","styles","container","height","contentContainerStyle","transform","translateY","refreshUIElements","currentPositionIndex","Math","max","current","setNativeProps","maxDeltaY","handleOnChange","handleSettingScrollableRef","scrollableRef","handleSnapTo","setValue","handleClose","handleExpand","handleCollapse","internalContextVariables","externalContextVariables","snapTo","expand","collapse","close","args","indexOf","State","FAILED","GESTURE","CONTENT","contentContainer","BottomSheet","isEqual"],"mappings":"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","sourcesContent":["import React, {\n  useMemo,\n  useRef,\n  useCallback,\n  forwardRef,\n  useImperativeHandle,\n  memo,\n} from 'react';\nimport { ViewStyle } from 'react-native';\nimport isEqual from 'lodash.isequal';\nimport invariant from 'invariant';\nimport Animated, {\n  useCode,\n  onChange,\n  call,\n  eq,\n  cond,\n  neq,\n  and,\n  // concat,\n  greaterThan,\n  Extrapolate,\n  set,\n  // defined,\n  sub,\n} from 'react-native-reanimated';\nimport {\n  PanGestureHandler,\n  TapGestureHandler,\n  State,\n} from 'react-native-gesture-handler';\nimport {\n  usePanGestureHandler,\n  useTapGestureHandler,\n  // ReText,\n} from 'react-native-redash';\nimport DraggableView from '../draggableView';\nimport Handle from '../handle';\nimport ContentWrapper from '../contentWrapper';\nimport { useTransition } from './useTransition';\nimport { useStableCallback, useScrollable } from '../../hooks';\nimport { normalizeSnapPoints } from '../../utilities';\nimport {\n  BottomSheetInternalProvider,\n  BottomSheetProvider,\n} from '../../contexts';\nimport { GESTURE } from '../../constants';\nimport {\n  NORMAL_DECELERATION_RATE,\n  DEFAULT_ANIMATION_EASING,\n  DEFAULT_ANIMATION_DURATION,\n} from './constants';\nimport type { ScrollableRef, BottomSheetMethods } from '../../types';\nimport type { BottomSheetProps } from './types';\nimport { styles } from './styles';\n\nconst {\n  interpolate: interpolateV1,\n  interpolateNode: interpolateV2,\n} = require('react-native-reanimated');\nconst interpolate = interpolateV2 || interpolateV1;\n\ntype BottomSheet = BottomSheetMethods;\n\nAnimated.addWhitelistedUIProps({\n  decelerationRate: true,\n});\n\nconst BottomSheetComponent = forwardRef<BottomSheet, BottomSheetProps>(\n  (\n    {\n      // animations\n      animationDuration = DEFAULT_ANIMATION_DURATION,\n      animationEasing = DEFAULT_ANIMATION_EASING,\n      // general\n      initialSnapIndex = 0,\n      snapPoints: _snapPoints,\n      topInset = 0,\n      enabled = true,\n      // animated nodes callback\n      animatedPosition: _animatedPosition,\n      animatedPositionIndex: _animatedPositionIndex,\n      // callbacks\n      onChange: _onChange,\n      // components\n      handleComponent: HandleComponent = Handle,\n      backgroundComponent: BackgroundComponent = null,\n      children,\n    },\n    ref\n  ) => {\n    //#region validate props\n    // validate `snapPoints`\n    invariant(\n      _snapPoints,\n      `'snapPoints' was not provided! please provide at least one snap point.`\n    );\n\n    invariant(\n      _snapPoints.length > 0,\n      `'snapPoints' was provided with no points! please provide at least one snap point.`\n    );\n\n    // validate `initialSnapIndex`\n    invariant(\n      typeof initialSnapIndex === 'number',\n      `'initialSnapIndex' was provided but with wrong type ! expected type is a number.`\n    );\n\n    invariant(\n      initialSnapIndex >= -1 && initialSnapIndex <= _snapPoints.length - 1,\n      `'initialSnapIndex' was provided but out of the provided snap points range! expected value to be between -1, ${\n        _snapPoints.length - 1\n      }`\n    );\n\n    // topInset\n    invariant(\n      typeof topInset === 'number',\n      `'topInset' was provided but with wrong type ! expected type is a number.`\n    );\n\n    // validate animations\n    invariant(\n      typeof animationDuration === 'number',\n      `'animationDuration' was provided but with wrong type ! expected type is a number.`\n    );\n\n    invariant(\n      animationDuration > 0,\n      `'animationDuration' was provided but the value is very low! expected value to be greater than 0`\n    );\n\n    invariant(\n      typeof animationEasing === 'function',\n      `'animationEasing' was provided but with wrong type ! expected type is a Animated.EasingFunction.`\n    );\n    //#endregion\n\n    //#region refs\n    const currentPositionIndexRef = useRef<number>(initialSnapIndex);\n    const rootTapGestureRef = useRef<TapGestureHandler>(null);\n    const handlePanGestureRef = useRef<PanGestureHandler>(null);\n    //#endregion\n\n    //#region variables\n    const {\n      scrollableContentOffsetY,\n      setScrollableRef,\n      removeScrollableRef,\n      scrollToTop,\n      flashScrollableIndicators,\n    } = useScrollable();\n\n    // normalize snap points\n    const { snapPoints, sheetHeight } = useMemo(() => {\n      const normalizedSnapPoints = normalizeSnapPoints(_snapPoints, topInset);\n      const maxSnapPoint =\n        normalizedSnapPoints[normalizedSnapPoints.length - 1];\n      return {\n        snapPoints: normalizedSnapPoints.map(\n          normalizedSnapPoint => maxSnapPoint - normalizedSnapPoint\n        ),\n        sheetHeight: maxSnapPoint,\n      };\n    }, [_snapPoints, topInset]);\n    const initialPosition = useMemo(() => {\n      return initialSnapIndex < 0 ? sheetHeight : snapPoints[initialSnapIndex];\n    }, [initialSnapIndex, sheetHeight, snapPoints]);\n    //#endregion\n\n    //#region gestures\n    const {\n      state: handlePanGestureState,\n      translation: { y: handlePanGestureTranslationY },\n      velocity: { y: handlePanGestureVelocityY },\n      gestureHandler: handlePanGestureHandler,\n    } = usePanGestureHandler();\n\n    const {\n      state: contentPanGestureState,\n      translation: { y: contentPanGestureTranslationY },\n      velocity: { y: contentPanGestureVelocityY },\n    } = usePanGestureHandler();\n\n    const {\n      state: tapGestureState,\n      gestureHandler: tapGestureHandler,\n    } = useTapGestureHandler();\n    //#endregion\n\n    //#region animation\n    const {\n      position,\n      manualSnapToPoint,\n      currentPosition,\n      currentGesture,\n    } = useTransition({\n      animationDuration,\n      animationEasing,\n      contentPanGestureState,\n      contentPanGestureTranslationY,\n      contentPanGestureVelocityY,\n      handlePanGestureState,\n      handlePanGestureTranslationY,\n      handlePanGestureVelocityY,\n      scrollableContentOffsetY,\n      snapPoints,\n      initialPosition,\n    });\n\n    const animatedPositionIndex = useMemo(\n      () =>\n        interpolate(position, {\n          inputRange: snapPoints.slice().reverse(),\n          outputRange: snapPoints\n            .slice()\n            .map((_, index) => index)\n            .reverse(),\n          extrapolate: Extrapolate.CLAMP,\n        }),\n      [position, snapPoints]\n    );\n    /**\n     * Scrollable animated props.\n     */\n    const decelerationRate = useMemo(\n      () => cond(greaterThan(position, 0), 0.001, NORMAL_DECELERATION_RATE),\n      [position]\n    );\n    //#endregion\n\n    //#region styles\n    const containerStyle = useMemo<ViewStyle>(\n      () => ({\n        ...styles.container,\n        height: sheetHeight,\n      }),\n      [sheetHeight]\n    );\n    const contentContainerStyle = useMemo<Animated.AnimateStyle<ViewStyle>>(\n      () => ({\n        ...styles.container,\n        height: sheetHeight,\n        transform: [{ translateY: position }],\n      }),\n      [sheetHeight, position]\n    );\n    //#endregion\n\n    //#region callbacks\n    const refreshUIElements = useCallback(() => {\n      const currentPositionIndex = Math.max(currentPositionIndexRef.current, 0);\n      if (currentPositionIndex === snapPoints.length - 1) {\n        flashScrollableIndicators();\n        // @ts-ignore\n        rootTapGestureRef.current.setNativeProps({\n          maxDeltaY: 0,\n        });\n      } else {\n        // @ts-ignore\n        rootTapGestureRef.current.setNativeProps({\n          maxDeltaY: snapPoints[currentPositionIndex],\n        });\n      }\n    }, [snapPoints, flashScrollableIndicators]);\n    const handleOnChange = useStableCallback((index: number) => {\n      if (_onChange) {\n        _onChange(index);\n      }\n    });\n    const handleSettingScrollableRef = useCallback(\n      (scrollableRef: ScrollableRef) => {\n        setScrollableRef(scrollableRef);\n        refreshUIElements();\n      },\n      [setScrollableRef, refreshUIElements]\n    );\n    //#endregion\n\n    //#region methods\n    const handleSnapTo = useCallback(\n      (index: number) => {\n        invariant(\n          index >= -1 && index <= snapPoints.length - 1,\n          `'index' was provided but out of the provided snap points range! expected value to be between -1, ${\n            snapPoints.length - 1\n          }`\n        );\n        manualSnapToPoint.setValue(snapPoints[index]);\n      },\n      [snapPoints, manualSnapToPoint]\n    );\n    const handleClose = useCallback(() => {\n      manualSnapToPoint.setValue(sheetHeight);\n    }, [sheetHeight, manualSnapToPoint]);\n    const handleExpand = useCallback(() => {\n      manualSnapToPoint.setValue(snapPoints[snapPoints.length - 1]);\n    }, [snapPoints, manualSnapToPoint]);\n    const handleCollapse = useCallback(() => {\n      manualSnapToPoint.setValue(snapPoints[0]);\n    }, [snapPoints, manualSnapToPoint]);\n    //#endregion\n\n    //#region\n    const internalContextVariables = useMemo(\n      () => ({\n        enabled,\n        rootTapGestureRef,\n        handlePanGestureState,\n        handlePanGestureTranslationY,\n        handlePanGestureVelocityY,\n        contentPanGestureState,\n        contentPanGestureTranslationY,\n        contentPanGestureVelocityY,\n        scrollableContentOffsetY,\n        decelerationRate,\n        setScrollableRef: handleSettingScrollableRef,\n        removeScrollableRef,\n      }),\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      [enabled]\n    );\n    const externalContextVariables = useMemo(\n      () => ({\n        snapTo: handleSnapTo,\n        expand: handleExpand,\n        collapse: handleCollapse,\n        close: handleClose,\n      }),\n      [handleSnapTo, handleExpand, handleCollapse, handleClose]\n    );\n    //#endregion\n\n    //#region effects\n    useImperativeHandle(ref, () => ({\n      snapTo: handleSnapTo,\n      expand: handleExpand,\n      collapse: handleCollapse,\n      close: handleClose,\n    }));\n\n    /**\n     * @DEV\n     * here we track the current position and\n     * - call on change ( if provided ).\n     * - flash scrollable component scroll indicators.\n     * - manipulate the root tap gesture handler maxDeltaY,\n     *   which allows the scrollable component to be activated.\n     */\n    useCode(\n      () =>\n        onChange(currentPosition, [\n          call([currentPosition], args => {\n            const currentPositionIndex = snapPoints.indexOf(args[0]);\n\n            /**\n             * if animation was interrupted, we ignore the change.\n             */\n            if (currentPositionIndex === -1 && args[0] !== sheetHeight) {\n              return;\n            }\n            currentPositionIndexRef.current = currentPositionIndex;\n            refreshUIElements();\n            handleOnChange(currentPositionIndex);\n          }),\n        ]),\n      [snapPoints, refreshUIElements]\n    );\n\n    /**\n     * @DEV\n     * Once the root tap gesture handler states change to failed\n     * and the sheet not fully extended, we make sure to prevent the\n     * scrollable component from scrolling.\n     */\n    useCode(\n      () =>\n        cond(\n          and(\n            eq(tapGestureState, State.FAILED),\n            eq(currentGesture, GESTURE.CONTENT),\n            neq(position, 0)\n          ),\n          call([], () => {\n            scrollToTop();\n          })\n        ),\n      []\n    );\n    //#endregion\n\n    // render\n    return (\n      <>\n        <ContentWrapper\n          ref={rootTapGestureRef}\n          initialMaxDeltaY={snapPoints[Math.max(initialSnapIndex, 0)]}\n          style={containerStyle}\n          {...tapGestureHandler}\n        >\n          <Animated.View style={contentContainerStyle}>\n            {BackgroundComponent && (\n              <BackgroundComponent pointerEvents=\"none\" />\n            )}\n            <BottomSheetProvider value={externalContextVariables}>\n              <PanGestureHandler\n                enabled={enabled}\n                ref={handlePanGestureRef}\n                simultaneousHandlers={rootTapGestureRef}\n                shouldCancelWhenOutside={false}\n                {...handlePanGestureHandler}\n              >\n                <Animated.View>\n                  <HandleComponent\n                    animatedPositionIndex={animatedPositionIndex}\n                  />\n                </Animated.View>\n              </PanGestureHandler>\n\n              <BottomSheetInternalProvider value={internalContextVariables}>\n                <DraggableView style={styles.contentContainer}>\n                  {children}\n                </DraggableView>\n              </BottomSheetInternalProvider>\n            </BottomSheetProvider>\n          </Animated.View>\n        </ContentWrapper>\n\n        {_animatedPosition && (\n          <Animated.Code\n            exec={set(_animatedPosition, sub(sheetHeight, position))}\n          />\n        )}\n\n        {_animatedPositionIndex && (\n          <Animated.Code\n            exec={set(_animatedPositionIndex, animatedPositionIndex)}\n          />\n        )}\n        {/* <Animated.View pointerEvents=\"none\" style={styles.debug}>\n          <ReText\n            style={styles.debugText}\n            text={concat('manualSnapToPoint: ', manualSnapToPoint)}\n          />\n          <ReText\n            style={styles.debugText}\n            text={concat('tapState: ', tapGestureState)}\n          />\n          <ReText\n            style={styles.debugText}\n            text={concat('contentState: ', contentPanGestureState)}\n          />\n          <ReText\n            style={styles.debugText}\n            text={concat('handleState: ', handlePanGestureState)}\n          />\n          <ReText\n            style={styles.debugText}\n            text={concat(\n              'contentTranslationY: ',\n              contentPanGestureTranslationY\n            )}\n          />\n          <ReText\n            style={styles.debugText}\n            text={concat('scrollableOffsetY: ', scrollableContentOffsetY)}\n          />\n          <ReText\n            style={styles.debugText}\n            text={concat('position: ', position)}\n          />\n          <ReText\n            style={styles.debugText}\n            text={concat('currentPosition: ', currentPosition)}\n          />\n        </Animated.View> */}\n      </>\n    );\n  }\n);\n\nconst BottomSheet = memo(BottomSheetComponent, isEqual);\n\nexport default BottomSheet;\n"]}