{"version":3,"sources":["BottomSheet.tsx"],"names":["React","useMemo","useRef","useCallback","forwardRef","useImperativeHandle","memo","isEqual","invariant","Animated","useCode","onChange","call","eq","cond","neq","and","greaterThan","Extrapolate","set","sub","PanGestureHandler","State","usePanGestureHandler","useTapGestureHandler","DraggableView","Handle","ContentWrapper","useTransition","useStableCallback","useScrollable","normalizeSnapPoints","BottomSheetInternalProvider","BottomSheetProvider","GESTURE","NORMAL_DECELERATION_RATE","DEFAULT_ANIMATION_EASING","DEFAULT_ANIMATION_DURATION","styles","interpolate","interpolateV1","interpolateNode","interpolateV2","require","addWhitelistedUIProps","decelerationRate","BottomSheetComponent","animationDuration","animationEasing","initialSnapIndex","snapPoints","_snapPoints","topInset","enabled","animatedPosition","_animatedPosition","animatedPositionIndex","_animatedPositionIndex","_onChange","handleComponent","HandleComponent","backgroundComponent","BackgroundComponent","children","ref","length","currentPositionIndexRef","rootTapGestureRef","handlePanGestureRef","scrollableContentOffsetY","setScrollableRef","removeScrollableRef","scrollToTop","flashScrollableIndicators","sheetHeight","normalizedSnapPoints","maxSnapPoint","map","normalizedSnapPoint","initialPosition","state","handlePanGestureState","translation","y","handlePanGestureTranslationY","velocity","handlePanGestureVelocityY","gestureHandler","handlePanGestureHandler","contentPanGestureState","contentPanGestureTranslationY","contentPanGestureVelocityY","tapGestureState","tapGestureHandler","position","manualSnapToPoint","currentPosition","currentGesture","inputRange","slice","reverse","outputRange","_","index","extrapolate","CLAMP","containerStyle","container","height","contentContainerStyle","transform","translateY","refreshUIElements","currentPositionIndex","Math","max","current","setNativeProps","maxDeltaY","handleOnChange","handleSettingScrollableRef","scrollableRef","handleSnapTo","setValue","handleClose","handleExpand","handleCollapse","internalContextVariables","externalContextVariables","snapTo","expand","collapse","close","args","indexOf","FAILED","CONTENT","contentContainer","BottomSheet"],"mappings":"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","sourcesContent":["import React, {\n  useMemo,\n  useRef,\n  useCallback,\n  forwardRef,\n  useImperativeHandle,\n  memo,\n} from 'react';\nimport { ViewStyle } from 'react-native';\nimport isEqual from 'lodash.isequal';\nimport invariant from 'invariant';\nimport Animated, {\n  useCode,\n  onChange,\n  call,\n  eq,\n  cond,\n  neq,\n  and,\n  // concat,\n  greaterThan,\n  Extrapolate,\n  set,\n  // defined,\n  sub,\n} from 'react-native-reanimated';\nimport {\n  PanGestureHandler,\n  TapGestureHandler,\n  State,\n} from 'react-native-gesture-handler';\nimport {\n  usePanGestureHandler,\n  useTapGestureHandler,\n  // ReText,\n} from 'react-native-redash';\nimport DraggableView from '../draggableView';\nimport Handle from '../handle';\nimport ContentWrapper from '../contentWrapper';\nimport { useTransition } from './useTransition';\nimport { useStableCallback, useScrollable } from '../../hooks';\nimport { normalizeSnapPoints } from '../../utilities';\nimport {\n  BottomSheetInternalProvider,\n  BottomSheetProvider,\n} from '../../contexts';\nimport { GESTURE } from '../../constants';\nimport {\n  NORMAL_DECELERATION_RATE,\n  DEFAULT_ANIMATION_EASING,\n  DEFAULT_ANIMATION_DURATION,\n} from './constants';\nimport type { ScrollableRef, BottomSheetMethods } from '../../types';\nimport type { BottomSheetProps } from './types';\nimport { styles } from './styles';\n\nconst {\n  interpolate: interpolateV1,\n  interpolateNode: interpolateV2,\n} = require('react-native-reanimated');\nconst interpolate = interpolateV2 || interpolateV1;\n\ntype BottomSheet = BottomSheetMethods;\n\nAnimated.addWhitelistedUIProps({\n  decelerationRate: true,\n});\n\nconst BottomSheetComponent = forwardRef<BottomSheet, BottomSheetProps>(\n  (\n    {\n      // animations\n      animationDuration = DEFAULT_ANIMATION_DURATION,\n      animationEasing = DEFAULT_ANIMATION_EASING,\n      // general\n      initialSnapIndex = 0,\n      snapPoints: _snapPoints,\n      topInset = 0,\n      enabled = true,\n      // animated nodes callback\n      animatedPosition: _animatedPosition,\n      animatedPositionIndex: _animatedPositionIndex,\n      // callbacks\n      onChange: _onChange,\n      // components\n      handleComponent: HandleComponent = Handle,\n      backgroundComponent: BackgroundComponent = null,\n      children,\n    },\n    ref\n  ) => {\n    //#region validate props\n    // validate `snapPoints`\n    invariant(\n      _snapPoints,\n      `'snapPoints' was not provided! please provide at least one snap point.`\n    );\n\n    invariant(\n      _snapPoints.length > 0,\n      `'snapPoints' was provided with no points! please provide at least one snap point.`\n    );\n\n    // validate `initialSnapIndex`\n    invariant(\n      typeof initialSnapIndex === 'number',\n      `'initialSnapIndex' was provided but with wrong type ! expected type is a number.`\n    );\n\n    invariant(\n      initialSnapIndex >= -1 && initialSnapIndex <= _snapPoints.length - 1,\n      `'initialSnapIndex' was provided but out of the provided snap points range! expected value to be between -1, ${\n        _snapPoints.length - 1\n      }`\n    );\n\n    // topInset\n    invariant(\n      typeof topInset === 'number',\n      `'topInset' was provided but with wrong type ! expected type is a number.`\n    );\n\n    // validate animations\n    invariant(\n      typeof animationDuration === 'number',\n      `'animationDuration' was provided but with wrong type ! expected type is a number.`\n    );\n\n    invariant(\n      animationDuration > 0,\n      `'animationDuration' was provided but the value is very low! expected value to be greater than 0`\n    );\n\n    invariant(\n      typeof animationEasing === 'function',\n      `'animationEasing' was provided but with wrong type ! expected type is a Animated.EasingFunction.`\n    );\n    //#endregion\n\n    //#region refs\n    const currentPositionIndexRef = useRef<number>(initialSnapIndex);\n    const rootTapGestureRef = useRef<TapGestureHandler>(null);\n    const handlePanGestureRef = useRef<PanGestureHandler>(null);\n    //#endregion\n\n    //#region variables\n    const {\n      scrollableContentOffsetY,\n      setScrollableRef,\n      removeScrollableRef,\n      scrollToTop,\n      flashScrollableIndicators,\n    } = useScrollable();\n\n    // normalize snap points\n    const { snapPoints, sheetHeight } = useMemo(() => {\n      const normalizedSnapPoints = normalizeSnapPoints(_snapPoints, topInset);\n      const maxSnapPoint =\n        normalizedSnapPoints[normalizedSnapPoints.length - 1];\n      return {\n        snapPoints: normalizedSnapPoints.map(\n          normalizedSnapPoint => maxSnapPoint - normalizedSnapPoint\n        ),\n        sheetHeight: maxSnapPoint,\n      };\n    }, [_snapPoints, topInset]);\n    const initialPosition = useMemo(() => {\n      return initialSnapIndex < 0 ? sheetHeight : snapPoints[initialSnapIndex];\n    }, [initialSnapIndex, sheetHeight, snapPoints]);\n    //#endregion\n\n    //#region gestures\n    const {\n      state: handlePanGestureState,\n      translation: { y: handlePanGestureTranslationY },\n      velocity: { y: handlePanGestureVelocityY },\n      gestureHandler: handlePanGestureHandler,\n    } = usePanGestureHandler();\n\n    const {\n      state: contentPanGestureState,\n      translation: { y: contentPanGestureTranslationY },\n      velocity: { y: contentPanGestureVelocityY },\n    } = usePanGestureHandler();\n\n    const {\n      state: tapGestureState,\n      gestureHandler: tapGestureHandler,\n    } = useTapGestureHandler();\n    //#endregion\n\n    //#region animation\n    const {\n      position,\n      manualSnapToPoint,\n      currentPosition,\n      currentGesture,\n    } = useTransition({\n      animationDuration,\n      animationEasing,\n      contentPanGestureState,\n      contentPanGestureTranslationY,\n      contentPanGestureVelocityY,\n      handlePanGestureState,\n      handlePanGestureTranslationY,\n      handlePanGestureVelocityY,\n      scrollableContentOffsetY,\n      snapPoints,\n      initialPosition,\n    });\n\n    const animatedPositionIndex = useMemo(\n      () =>\n        interpolate(position, {\n          inputRange: snapPoints.slice().reverse(),\n          outputRange: snapPoints\n            .slice()\n            .map((_, index) => index)\n            .reverse(),\n          extrapolate: Extrapolate.CLAMP,\n        }),\n      [position, snapPoints]\n    );\n    /**\n     * Scrollable animated props.\n     */\n    const decelerationRate = useMemo(\n      () => cond(greaterThan(position, 0), 0.001, NORMAL_DECELERATION_RATE),\n      [position]\n    );\n    //#endregion\n\n    //#region styles\n    const containerStyle = useMemo<ViewStyle>(\n      () => ({\n        ...styles.container,\n        height: sheetHeight,\n      }),\n      [sheetHeight]\n    );\n    const contentContainerStyle = useMemo<Animated.AnimateStyle<ViewStyle>>(\n      () => ({\n        ...styles.container,\n        height: sheetHeight,\n        transform: [{ translateY: position }],\n      }),\n      [sheetHeight, position]\n    );\n    //#endregion\n\n    //#region callbacks\n    const refreshUIElements = useCallback(() => {\n      const currentPositionIndex = Math.max(currentPositionIndexRef.current, 0);\n      if (currentPositionIndex === snapPoints.length - 1) {\n        flashScrollableIndicators();\n        // @ts-ignore\n        rootTapGestureRef.current.setNativeProps({\n          maxDeltaY: 0,\n        });\n      } else {\n        // @ts-ignore\n        rootTapGestureRef.current.setNativeProps({\n          maxDeltaY: snapPoints[currentPositionIndex],\n        });\n      }\n    }, [snapPoints, flashScrollableIndicators]);\n    const handleOnChange = useStableCallback((index: number) => {\n      if (_onChange) {\n        _onChange(index);\n      }\n    });\n    const handleSettingScrollableRef = useCallback(\n      (scrollableRef: ScrollableRef) => {\n        setScrollableRef(scrollableRef);\n        refreshUIElements();\n      },\n      [setScrollableRef, refreshUIElements]\n    );\n    //#endregion\n\n    //#region methods\n    const handleSnapTo = useCallback(\n      (index: number) => {\n        invariant(\n          index >= -1 && index <= snapPoints.length - 1,\n          `'index' was provided but out of the provided snap points range! expected value to be between -1, ${\n            snapPoints.length - 1\n          }`\n        );\n        manualSnapToPoint.setValue(snapPoints[index]);\n      },\n      [snapPoints, manualSnapToPoint]\n    );\n    const handleClose = useCallback(() => {\n      manualSnapToPoint.setValue(sheetHeight);\n    }, [sheetHeight, manualSnapToPoint]);\n    const handleExpand = useCallback(() => {\n      manualSnapToPoint.setValue(snapPoints[snapPoints.length - 1]);\n    }, [snapPoints, manualSnapToPoint]);\n    const handleCollapse = useCallback(() => {\n      manualSnapToPoint.setValue(snapPoints[0]);\n    }, [snapPoints, manualSnapToPoint]);\n    //#endregion\n\n    //#region\n    const internalContextVariables = useMemo(\n      () => ({\n        enabled,\n        rootTapGestureRef,\n        handlePanGestureState,\n        handlePanGestureTranslationY,\n        handlePanGestureVelocityY,\n        contentPanGestureState,\n        contentPanGestureTranslationY,\n        contentPanGestureVelocityY,\n        scrollableContentOffsetY,\n        decelerationRate,\n        setScrollableRef: handleSettingScrollableRef,\n        removeScrollableRef,\n      }),\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      [enabled]\n    );\n    const externalContextVariables = useMemo(\n      () => ({\n        snapTo: handleSnapTo,\n        expand: handleExpand,\n        collapse: handleCollapse,\n        close: handleClose,\n      }),\n      [handleSnapTo, handleExpand, handleCollapse, handleClose]\n    );\n    //#endregion\n\n    //#region effects\n    useImperativeHandle(ref, () => ({\n      snapTo: handleSnapTo,\n      expand: handleExpand,\n      collapse: handleCollapse,\n      close: handleClose,\n    }));\n\n    /**\n     * @DEV\n     * here we track the current position and\n     * - call on change ( if provided ).\n     * - flash scrollable component scroll indicators.\n     * - manipulate the root tap gesture handler maxDeltaY,\n     *   which allows the scrollable component to be activated.\n     */\n    useCode(\n      () =>\n        onChange(currentPosition, [\n          call([currentPosition], args => {\n            const currentPositionIndex = snapPoints.indexOf(args[0]);\n\n            /**\n             * if animation was interrupted, we ignore the change.\n             */\n            if (currentPositionIndex === -1 && args[0] !== sheetHeight) {\n              return;\n            }\n            currentPositionIndexRef.current = currentPositionIndex;\n            refreshUIElements();\n            handleOnChange(currentPositionIndex);\n          }),\n        ]),\n      [snapPoints, refreshUIElements]\n    );\n\n    /**\n     * @DEV\n     * Once the root tap gesture handler states change to failed\n     * and the sheet not fully extended, we make sure to prevent the\n     * scrollable component from scrolling.\n     */\n    useCode(\n      () =>\n        cond(\n          and(\n            eq(tapGestureState, State.FAILED),\n            eq(currentGesture, GESTURE.CONTENT),\n            neq(position, 0)\n          ),\n          call([], () => {\n            scrollToTop();\n          })\n        ),\n      []\n    );\n    //#endregion\n\n    // render\n    return (\n      <>\n        <ContentWrapper\n          ref={rootTapGestureRef}\n          initialMaxDeltaY={snapPoints[Math.max(initialSnapIndex, 0)]}\n          style={containerStyle}\n          {...tapGestureHandler}\n        >\n          <Animated.View style={contentContainerStyle}>\n            {BackgroundComponent && (\n              <BackgroundComponent pointerEvents=\"none\" />\n            )}\n            <BottomSheetProvider value={externalContextVariables}>\n              <PanGestureHandler\n                enabled={enabled}\n                ref={handlePanGestureRef}\n                simultaneousHandlers={rootTapGestureRef}\n                shouldCancelWhenOutside={false}\n                {...handlePanGestureHandler}\n              >\n                <Animated.View>\n                  <HandleComponent\n                    animatedPositionIndex={animatedPositionIndex}\n                  />\n                </Animated.View>\n              </PanGestureHandler>\n\n              <BottomSheetInternalProvider value={internalContextVariables}>\n                <DraggableView style={styles.contentContainer}>\n                  {children}\n                </DraggableView>\n              </BottomSheetInternalProvider>\n            </BottomSheetProvider>\n          </Animated.View>\n        </ContentWrapper>\n\n        {_animatedPosition && (\n          <Animated.Code\n            exec={set(_animatedPosition, sub(sheetHeight, position))}\n          />\n        )}\n\n        {_animatedPositionIndex && (\n          <Animated.Code\n            exec={set(_animatedPositionIndex, animatedPositionIndex)}\n          />\n        )}\n        {/* <Animated.View pointerEvents=\"none\" style={styles.debug}>\n          <ReText\n            style={styles.debugText}\n            text={concat('manualSnapToPoint: ', manualSnapToPoint)}\n          />\n          <ReText\n            style={styles.debugText}\n            text={concat('tapState: ', tapGestureState)}\n          />\n          <ReText\n            style={styles.debugText}\n            text={concat('contentState: ', contentPanGestureState)}\n          />\n          <ReText\n            style={styles.debugText}\n            text={concat('handleState: ', handlePanGestureState)}\n          />\n          <ReText\n            style={styles.debugText}\n            text={concat(\n              'contentTranslationY: ',\n              contentPanGestureTranslationY\n            )}\n          />\n          <ReText\n            style={styles.debugText}\n            text={concat('scrollableOffsetY: ', scrollableContentOffsetY)}\n          />\n          <ReText\n            style={styles.debugText}\n            text={concat('position: ', position)}\n          />\n          <ReText\n            style={styles.debugText}\n            text={concat('currentPosition: ', currentPosition)}\n          />\n        </Animated.View> */}\n      </>\n    );\n  }\n);\n\nconst BottomSheet = memo(BottomSheetComponent, isEqual);\n\nexport default BottomSheet;\n"]}