{"version":3,"sources":["ContentWrapper.ios.tsx"],"names":["React","forwardRef","memo","isEqual","TapGestureHandler","Animated","ContentWrapperComponent","children","initialMaxDeltaY","style","onGestureEvent","onHandlerStateChange","ref","ContentWrapper"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,IAA5B,QAAwC,OAAxC;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,SAASC,iBAAT,QAAkC,8BAAlC;AACA,OAAOC,QAAP,MAAqB,yBAArB;AAGA,MAAMC,uBAAuB,gBAAGL,UAAU,CAIxC,CACE;AAAEM,EAAAA,QAAF;AAAYC,EAAAA,gBAAZ;AAA8BC,EAAAA,KAA9B;AAAqCC,EAAAA,cAArC;AAAqDC,EAAAA;AAArD,CADF,EAEEC,GAFF,KAGK;AACH,sBACE,oBAAC,iBAAD;AACE,IAAA,GAAG,EAAEA,GADP;AAEE,IAAA,aAAa,EAAE,OAFjB;AAGE,IAAA,SAAS,EAAEJ,gBAHb;AAIE,IAAA,uBAAuB,EAAE,KAJ3B;AAKE,IAAA,cAAc,EAAEE,cALlB;AAME,IAAA,oBAAoB,EAAEC;AANxB,kBAQE,oBAAC,QAAD,CAAU,IAAV;AAAe,IAAA,aAAa,EAAC,UAA7B;AAAwC,IAAA,KAAK,EAAEF;AAA/C,KACGF,QADH,CARF,CADF;AAcD,CAtBuC,CAA1C;AAyBA,MAAMM,cAAc,gBAAGX,IAAI,CAACI,uBAAD,EAA0BH,OAA1B,CAA3B;AAEA,eAAeU,cAAf","sourcesContent":["import React, { forwardRef, memo } from 'react';\nimport isEqual from 'lodash.isequal';\nimport { TapGestureHandler } from 'react-native-gesture-handler';\nimport Animated from 'react-native-reanimated';\nimport type { BottomSheetContentWrapperProps } from './types';\n\nconst ContentWrapperComponent = forwardRef<\n  TapGestureHandler,\n  BottomSheetContentWrapperProps\n>(\n  (\n    { children, initialMaxDeltaY, style, onGestureEvent, onHandlerStateChange },\n    ref\n  ) => {\n    return (\n      <TapGestureHandler\n        ref={ref}\n        maxDurationMs={1000000}\n        maxDeltaY={initialMaxDeltaY}\n        shouldCancelWhenOutside={false}\n        onGestureEvent={onGestureEvent}\n        onHandlerStateChange={onHandlerStateChange}\n      >\n        <Animated.View pointerEvents=\"box-none\" style={style}>\n          {children}\n        </Animated.View>\n      </TapGestureHandler>\n    );\n  }\n);\n\nconst ContentWrapper = memo(ContentWrapperComponent, isEqual);\n\nexport default ContentWrapper;\n"]}